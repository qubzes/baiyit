name: baiyit

services:
  api:
    image: baiyit-backend:latest
    build:
      context: .
    ports:
      - 8000:8000
    volumes:
      - .:/app
    depends_on:
      postgres:
        condition: service_healthy
    command:
      ["uvicorn", "app:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000"]
      interval: 30s
      timeout: 5s
      retries: 3

  email-worker:
    image: baiyit-backend:latest
    command: python worker.py email
    env_file:
      - .env
    volumes:
      - .:/app
    depends_on:
      - api

  adminer:
    image: adminer
    ports:
      - 8080:8080
    environment:
      ADMINER_DESIGN: pepa-linha
      ADMINER_DEFAULT_SERVER: postgres
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgres:17-alpine
    env_file: .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "PGPASSWORD=${POSTGRES_PASSWORD} psql -U ${POSTGRES_USER} -d ${POSTGRES_DB} -c 'SELECT 1;'",
        ]
      interval: 10s
      timeout: 5s
      retries: 3

  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
  
  # permit pdp

volumes:
  postgres_data:
  redis_data:
